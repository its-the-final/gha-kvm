
## tries to find out that cache is just between steps,not jobs
####      - name: Cache settle time
####        if: steps.cache-primes.outputs.cache-hit != 'true'
####        run: |
####             sleep 10
####      - name: Cache_global settle time
####        run: |
####             sleep 10
################







##      - name: Restore cache that can fail
##        # You need to specify an id to be able to tell what the status of this action was
##        id: restorecache1
##        # This needs to be true to proceed to the next step of failure
##        continue-on-error: true
##        uses: actions/cache@v4
##        with:
##          path: ./
##          key: ${{ runner.os }}-step-${{ github.run_id }}
##          
##
##
##      - name: Check-and-sleep
##        id: cachewait1
##        run: |
##             ls -1 prepare-cloudinit.sh || sleep 20 
##             ls -1 prepare-cloudinit.sh
##        continue-on-error: true
##
##      - name: Restore cache that can fail
##        # You need to specify an id to be able to tell what the status of this action was
##        id: restorecache2
##        # Only run this step if previus action fails. It knows that step one failed because we specified an `id` for the first step
##        if: steps.cachewait1.outcome == 'failure'
##
##        # This needs to be true to proceed to the next step of failure
##        continue-on-error: true
##        uses: actions/cache@v4
##        with:
##          path: ./
##          key: ${{ runner.os }}-step-${{ github.run_id }}
##
##      - name: Check-and-sleep
##        id: cachewait2
##        run: |
##             ls -1 prepare-cloudinit.sh || sleep 20 
##             ls -1 prepare-cloudinit.sh
##        continue-on-error: true
##
##      # Duplicate of the step that might fail ~ manual retry
##      - name: Restore cache that cannot fail
##        id: restorecache3
##        # Only run this step if step 1 fails. It knows that step one failed because we specified an `id` for the first step
##        if: steps.cachewait2.outcome == 'failure'
##        # This needs to be true to proceed to the next step of failure
##        continue-on-error: false
##        uses: actions/cache@v4
##        with:
##          path: ./
##          key: ${{ runner.os }}-step-${{ github.run_id }}
##      - name: Check-and-fail
##        id: cachewait3
##        run: |
##             ls -1 prepare-cloudinit.sh
##        continue-on-error: false
